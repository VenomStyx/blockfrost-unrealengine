////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////
/////
///// blockfrost 
/////
/////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////
////////// 
/////



#pragma once

#include "CoreMinimal.h"
#include "blockfrost_structs.generated.h"



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////
////////// 
/////



/////
///// USAGE METRICS
/////////////////////////////
////////// 
/////
USTRUCT(BlueprintType)
struct FUsageMetricsStruct
{
	GENERATED_BODY()

	// Server time in UNIX
	UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "blockfrost|Metrics")
	int64 Time;

	// Number of requests sent
	UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "blockfrost|Metrics")
	int32 Calls;

};



/////
///// ENDPOINT USAGE METRICS
/////////////////////////////
////////// 
/////
USTRUCT(BlueprintType)
struct FEndpointUsageMetricsStruct
{
	GENERATED_BODY()

		// Server time in UNIX
		UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "blockfrost|Metrics")
		int64 Time;

		// Number of requests sent
		UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "blockfrost|Metrics")
		int32 Calls;

		// The relative endpoint
		UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "blockfrost|Metrics")
		FName Endpoint;

};


